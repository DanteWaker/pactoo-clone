/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VideosToReviewImport } from './routes/videos-to-review'

// Create Virtual Routes

const SubscriptionLazyImport = createFileRoute('/subscription')()
const SharedLinksLazyImport = createFileRoute('/shared-links')()
const ReviewSettingsLazyImport = createFileRoute('/review-settings')()
const ProfileLazyImport = createFileRoute('/profile')()
const PersonalInfoLazyImport = createFileRoute('/personal-info')()
const PacttosLazyImport = createFileRoute('/pacttos')()
const LibraryLazyImport = createFileRoute('/library')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SubscriptionLazyRoute = SubscriptionLazyImport.update({
  path: '/subscription',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/subscription.lazy').then((d) => d.Route))

const SharedLinksLazyRoute = SharedLinksLazyImport.update({
  path: '/shared-links',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shared-links.lazy').then((d) => d.Route))

const ReviewSettingsLazyRoute = ReviewSettingsLazyImport.update({
  path: '/review-settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/review-settings.lazy').then((d) => d.Route),
)

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const PersonalInfoLazyRoute = PersonalInfoLazyImport.update({
  path: '/personal-info',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/personal-info.lazy').then((d) => d.Route))

const PacttosLazyRoute = PacttosLazyImport.update({
  path: '/pacttos',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pacttos.lazy').then((d) => d.Route))

const LibraryLazyRoute = LibraryLazyImport.update({
  path: '/library',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/library.lazy').then((d) => d.Route))

const VideosToReviewRoute = VideosToReviewImport.update({
  path: '/videos-to-review',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/videos-to-review': {
      id: '/videos-to-review'
      path: '/videos-to-review'
      fullPath: '/videos-to-review'
      preLoaderRoute: typeof VideosToReviewImport
      parentRoute: typeof rootRoute
    }
    '/library': {
      id: '/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryLazyImport
      parentRoute: typeof rootRoute
    }
    '/pacttos': {
      id: '/pacttos'
      path: '/pacttos'
      fullPath: '/pacttos'
      preLoaderRoute: typeof PacttosLazyImport
      parentRoute: typeof rootRoute
    }
    '/personal-info': {
      id: '/personal-info'
      path: '/personal-info'
      fullPath: '/personal-info'
      preLoaderRoute: typeof PersonalInfoLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/review-settings': {
      id: '/review-settings'
      path: '/review-settings'
      fullPath: '/review-settings'
      preLoaderRoute: typeof ReviewSettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/shared-links': {
      id: '/shared-links'
      path: '/shared-links'
      fullPath: '/shared-links'
      preLoaderRoute: typeof SharedLinksLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription': {
      id: '/subscription'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof SubscriptionLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  VideosToReviewRoute,
  LibraryLazyRoute,
  PacttosLazyRoute,
  PersonalInfoLazyRoute,
  ProfileLazyRoute,
  ReviewSettingsLazyRoute,
  SharedLinksLazyRoute,
  SubscriptionLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/videos-to-review",
        "/library",
        "/pacttos",
        "/personal-info",
        "/profile",
        "/review-settings",
        "/shared-links",
        "/subscription"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/videos-to-review": {
      "filePath": "videos-to-review.tsx"
    },
    "/library": {
      "filePath": "library.lazy.tsx"
    },
    "/pacttos": {
      "filePath": "pacttos.lazy.tsx"
    },
    "/personal-info": {
      "filePath": "personal-info.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/review-settings": {
      "filePath": "review-settings.lazy.tsx"
    },
    "/shared-links": {
      "filePath": "shared-links.lazy.tsx"
    },
    "/subscription": {
      "filePath": "subscription.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
